<Project Sdk="Microsoft.NET.Sdk.Web">

  <Import Project="..\..\..\src\MSK.Application.Module\MSK.Application.Module.targets" />

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <WwwRoot>wwwroot\</WwwRoot>
    <DefaultItemExcludes>$(SpaRoot)node_modules\**;node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>

    <MvcRazorExcludeRefAssembliesFromPublish>false</MvcRazorExcludeRefAssembliesFromPublish>
    <PublishWithAspNetCoreTargetManifest>false</PublishWithAspNetCoreTargetManifest>
    <UserSecretsId>dedf09db-5102-4cb4-8f49-f552900cf764</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="modules\" />
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**;node_modules\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**;node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.RouteAnalyzer" Version="0.5.1" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="2.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.0.0-preview1-final" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
    <DotNetCliToolReference Include="Microsoft.Extensions.SecretManager.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\src\MSK.Application.Module\MSK.Application.Module.csproj" />
    <ProjectReference Include="..\MSK.Samples.CryptoCurrency\MSK.Samples.CryptoCurrency.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
  </Target>

  <Target Name="BuildClientAssets" AfterTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)build') ">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn run build" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn run build:ssr" Condition=" '$(BuildServerSideRenderer)' == 'true' " />
  </Target>

  <Target Name="BuildServerAssets" AfterTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(WwwRoot)all.css') ">
    <Exec WorkingDirectory="." Command="webpack" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn run build" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn run build:ssr" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
